{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","helpers/filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handelChange","e","setState","currentTarget","value","handelSubmit","preventDefault","props","handlelAddContact","this","onSubmit","className","s","title","label","text","type","input","pattern","required","onChange","button","Component","ContactList","contacts","deliteContact","list","map","contact","item","text_d","onClick","id","Filter","filter","handelChangeFilter","toLowerCase","includes","trim","App","some","userName","alert","prevstate","shortid","generate","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.05b6fdc8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__vqn6T\",\"input\":\"Filter_input__FWRJJ\",\"modal-form-icon\":\"Filter_modal-form-icon__2U5np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactForm_input__2JJOF\",\"modal-form-icon\":\"ContactForm_modal-form-icon__J1Z7q\",\"title\":\"ContactForm_title__1AjuH\",\"text\":\"ContactForm_text__kmHHP\",\"button\":\"ContactForm_button__1bbyu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1hcxz\",\"text\":\"ContactList_text__2FWwC\",\"text_d\":\"ContactList_text_d__1xOH9\",\"item\":\"ContactList_item__2ZYw3\",\"button\":\"ContactList_button__1wXdC\"};","import { Component } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handelChange = (e) => {\r\n    this.setState({\r\n      [e.currentTarget.name]: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  handelSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.handlelAddContact(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handelSubmit,\r\n      handelChange,\r\n      state: { name, number },\r\n    } = this;\r\n\r\n    return (\r\n      <form onSubmit={handelSubmit}>\r\n        <h1 className={s.title}>Phonebook </h1>\r\n        <label className={s.label}>\r\n          <p className={s.text}>Name</p>\r\n          <input\r\n            type=\"text\"\r\n            className={s.input}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={handelChange}\r\n            value={name}\r\n          />\r\n        </label>\r\n        <label>\r\n          <p className={s.text}>Number</p>\r\n          <input\r\n            type=\"tel\"\r\n            className={s.input}\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={handelChange}\r\n            value={number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nfunction ContactList({ contacts, deliteContact }) {\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map((contact) => (\r\n        <li className={s.item} key={contact.id}>\r\n          <div>\r\n            <p className={s.text}>\r\n              Name: <span className={s.text_d}>{contact.name}</span>\r\n            </p>\r\n            <p className={s.text}>\r\n              Number: <span className={s.text_d}>{contact.number}</span>\r\n            </p>\r\n          </div>\r\n          <button\r\n            type=\"button\"\r\n            className={s.button}\r\n            onClick={() => deliteContact(contact.id)}\r\n          >\r\n            delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)).isRequired,\r\n  deliteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Filter.module.css\";\r\n\r\nfunction Filter({ filter, handelChangeFilter }) {\r\n  return (\r\n    <>\r\n      <h2 className={s.title}>Find contacts by name</h2>\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={handelChangeFilter}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  handelChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","function filter(contacts, filter) {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.trim().toLowerCase())\r\n  );\r\n}\r\n\r\nexport default filter;\r\n","import { Component } from \"react\";\nimport shortid from \"shortid\";\nimport \"./App.css\";\n\nimport ContactForm from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from \"./components/Filter\";\n\nimport filter from \"./helpers/filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    this.setState({ contacts: contacts ?? this.state.contacts });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    if (contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n    }\n  }\n\n  handlelAddContact = (contact) => {\n    this.state.contacts.some((userName) => userName.name === contact.name)\n      ? alert(\"Пользователь с таким именем уже добавлен\")\n      : this.setState((prevstate) => ({\n          contacts: [\n            ...prevstate.contacts,\n            { id: shortid.generate(), ...contact },\n          ],\n        }));\n  };\n\n  deliteContact = (id) => {\n    this.setState({\n      contacts: this.state.contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  handelChangeFilter = (e) => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ContactForm handlelAddContact={this.handlelAddContact} />\n        <Filter\n          filter={this.state.filter}\n          handelChangeFilter={this.handelChangeFilter}\n        />\n        <ContactList\n          contacts={filter(this.state.contacts, this.state.filter)}\n          deliteContact={this.deliteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}